#!/usr/bin/env node
'use strict';

/**
 * Modules required for starting
 */
var cluster = require('cluster')
  , fs = require('fs')
  , conf = require('nconf');


//load the Config options from file
conf.argv({
  'c': {
    alias: 'config',
    describe: 'Configuration file',
    demand: true
  },
  'w': {
    alias: 'hashbot:workers',
    describe: 'The number of workers to spawn'
  },
  'v': {
    alias: 'hashbot:verbose',
    describe: 'Be verbose (same as DEBUG=*)',
  }
})
.env()
.file({ file: conf.get('config') });

if (conf.get('hashbot:verbose')) {
  process.env.DEBUG = '*';
}

/**
 * Modules required for running
 */
var debug = require('debug')('hashbot:cli')
  , HashBot = require('..');

// Verify that the config file exists to avoid confusion
if (!fs.existsSync(conf.get('config'))) {
  console.error('Config file not found. File: ' + conf.get('config'));
  process.exit(1);
}

//Start the master
if (cluster.isMaster) {
  debug('Starting Master');

  // Catch invalid algorithm before processing files.
  if (!HashBot.verifyAlgorithm(conf.get('hashbot:algorithm'))) {
    console.error('Please choose a valid Hashing Algorithm');
    process.exit(1);
  }

  HashBot.healthCheck(function(err) {
    if (err){
      console.error('Healthcheck Failed, process exiting');
      process.exit(1);
    } else {
      HashBot.startCluster();
    }
  });
}

//Start the worker
if (cluster.isWorker) {
  HashBot.worker();
}